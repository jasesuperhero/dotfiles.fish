return {
  misc = {
    vim_icon = "",
    search = "",
    dots = "󰇘",
  },
  dap = {
    Stopped = { "󰁕 ", "DiagnosticWarn", "DapStoppedLine" },
    Breakpoint = " ",
    BreakpointCondition = " ",
    BreakpointRejected = { " ", "DiagnosticError" },
    LogPoint = ".>",
  },
  diagnostics = {
    error = " ",
    warn = " ",
    hint = "󱐌 ",
    info = " ",
  },
  git = {
    added = " ",
    conflict = "",
    git = "󰊢",
    ignored = "",
    modified = " ",
    removed = " ",
    renamed = "",
    staged = "",
    unstaged = "󰄱",
    untracked = "",
  },
  fs = {
    file = "󰈙",
    modified = "",
    read_only = "",
    closed = "",
    empty = "",
    empty_open = "",
    opened = "",
  },
  folds = {
    closed = "",
    opened = "",
    separator = "…",
  },
  kinds = {
    Array = "󰅪 ",
    Boolean = "󰨙 ",
    BreakStatement = "󰙧 ",
    Call = "󰃷 ",
    CaseStatement = "󱃙 ",
    Class = " ",
    Codeium = "󰘦 ",
    Collapsed = " ",
    Color = " ",
    Constant = "󰏿 ",
    Constructor = " ",
    ContinueStatement = "→ ",
    Control = " ",
    Copilot = " ",
    Declaration = "󰙠 ",
    Delete = "󰩺 ",
    DoStatement = "󰑖 ",
    Enum = " ",
    EnumMember = " ",
    Event = " ",
    Field = " ",
    File = "󰈔 ",
    Folder = "󰉋 ",
    ForStatement = "󰑖 ",
    Function = "󰊕 ",
    H1Marker = "󰉫 ", -- Used by markdown treesitter parser
    H2Marker = "󰉬 ",
    H3Marker = "󰉭 ",
    H4Marker = "󰉮 ",
    H5Marker = "󰉯 ",
    H6Marker = "󰉰 ",
    Identifier = "󰀫 ",
    IfStatement = "󰇉 ",
    Interface = " ",
    Key = " ",
    Keyword = "󰌋 ",
    List = "󰅪 ",
    Log = "󰦪 ",
    Lsp = " ",
    Macro = "󰁌 ",
    MarkdownH1 = "󰉫 ", -- Used by builtin markdown source
    MarkdownH2 = "󰉬 ",
    MarkdownH3 = "󰉭 ",
    MarkdownH4 = "󰉮 ",
    MarkdownH5 = "󰉯 ",
    MarkdownH6 = "󰉰 ",
    Method = "󰊕 ",
    Module = " ",
    Namespace = "󰦮 ",
    Null = " ",
    Number = "󰎠 ",
    Object = " ",
    Operator = "󰆕 ",
    Package = "󰆦 ",
    Pair = "󰅪 ",
    Property = " ",
    Reference = "󰦾 ",
    Regex = " ",
    Repeat = "󰑖 ",
    Scope = "󰅩 ",
    Snippet = "󰩫 ",
    Specifier = "󰦪 ",
    Statement = "󰅩 ",
    String = " ",
    Struct = " ",
    SwitchStatement = "󰺟 ",
    TabNine = "󰏚 ",
    Terminal = " ",
    Text = " ",
    Type = " ",
    TypeParameter = "󰆩 ",
    Unit = " ",
    Value = "󰎠 ",
    Variable = "󰀫 ",
    WhileStatement = "󰑖 ",
  },
}
