<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>nikivi.dash.profiles</string>
	<key>connections</key>
	<dict>
		<key>6ADBFE54-0F5D-4D4D-BA01-424EDE75EC3B</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>F4FC387A-6A8C-4D96-A24D-8F246A74E01F</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>868EAE91-22E4-4969-B78E-9BE4F13FB88B</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>6ADBFE54-0F5D-4D4D-BA01-424EDE75EC3B</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>F4FC387A-6A8C-4D96-A24D-8F246A74E01F</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>16B12FA9-2C39-4AEC-BED4-88CC57332CA4</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Nikita Voloboev</string>
	<key>description</key>
	<string>Search through your custom Dash profiles</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Dash Profile Switcher</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist="https://raw.githubusercontent.com/nikitavoloboev/small-workflows/master/dash-profile-switch/workflow/info.plist"
readonly workflow_url="https://raw.githubusercontent.com/nikitavoloboev/small-workflows/master/dash-profile-switch/Dash%20profile%20switcher.alfredworkflow"
readonly download_type='direct'
readonly frequency_check='7'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  readonly local notificator="$(find . -type d -name 'Notificator.app')"
  if [[ -n "${notificator}" ]]; then
    "${notificator}/Contents/Resources/Scripts/notificator" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  readonly local terminal_notifier="$(find . -type f -name 'terminal-notifier')"
  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}" -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  if ! url_exists "${remote_info_plist}"; then abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."; fi # Remote sanity check

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download pageâ€¦'
    open "${workflow_url}"
    exit 0
  fi

  download_url="$([[ "${download_type}" == 'github_release' ]] &amp;&amp; curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest" | grep 'browser_download_url' | head -1 | sed -E 's/.*browser_download_url": "(.*)"/\1/' || echo "${workflow_url}")"

  if url_exists "${download_url}"; then
    notification 'Downloading and installingâ€¦'
    curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${download_url}"
    open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>16B12FA9-2C39-4AEC-BED4-88CC57332CA4</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>fixedorder</key>
				<false/>
				<key>items</key>
				<string>[{"title":"Swift","arg":"dash:\/\/swift:"}]</string>
				<key>keyword</key>
				<string>ds</string>
				<key>runningsubtext</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Switch Dash profile</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.listfilter</string>
			<key>uid</key>
			<string>6ADBFE54-0F5D-4D4D-BA01-424EDE75EC3B</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>browser</key>
				<string></string>
				<key>spaces</key>
				<string></string>
				<key>url</key>
				<string>{query}</string>
				<key>utf8</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.openurl</string>
			<key>uid</key>
			<string>F4FC387A-6A8C-4D96-A24D-8F246A74E01F</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>triggerid</key>
				<string>switch dash profile</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.external</string>
			<key>uid</key>
			<string>868EAE91-22E4-4969-B78E-9BE4F13FB88B</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Details on how to use this workflow are found in the GitHub repo attached to the workflow.

Double click this workflow in sidebar -&gt; Open website.

Post any issues and feature requests you have there. ðŸ’œ</string>
	<key>uidata</key>
	<dict>
		<key>16B12FA9-2C39-4AEC-BED4-88CC57332CA4</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>530</integer>
			<key>ypos</key>
			<integer>20</integer>
		</dict>
		<key>6ADBFE54-0F5D-4D4D-BA01-424EDE75EC3B</key>
		<dict>
			<key>note</key>
			<string>These are my profiles, they won't work for you and you will need to set your own ones yourself in Dash by assigning a Keyword trigger to the profile.</string>
			<key>xpos</key>
			<integer>180</integer>
			<key>ypos</key>
			<integer>20</integer>
		</dict>
		<key>868EAE91-22E4-4969-B78E-9BE4F13FB88B</key>
		<dict>
			<key>xpos</key>
			<integer>10</integer>
			<key>ypos</key>
			<integer>20</integer>
		</dict>
		<key>F4FC387A-6A8C-4D96-A24D-8F246A74E01F</key>
		<dict>
			<key>xpos</key>
			<integer>350</integer>
			<key>ypos</key>
			<integer>20</integer>
		</dict>
	</dict>
	<key>version</key>
	<string>1.2</string>
	<key>webaddress</key>
	<string>https://github.com/nikitavoloboev/small-workflows/blob/master/dash-profile-switch#readme</string>
</dict>
</plist>
