# NOTE: you can use vars with $<var> and ${<var>} as long as the str is double quoted: ""
# WARNING: hex colors can't contain capital letters

# --> Catppuccin
thm_bg="#1e1e2e"
thm_fg="#cdd6f4"
thm_gray="#bac2de"
thm_cyan="#9399b2"
thm_magenta="#9399b2"
thm_pink="#f5c2e7"
thm_red="#f38ba8"
thm_green="#a6e3a1"
thm_blue="#89b4fa"
thm_orange="#fab387"
thm_black="#181825"
thm_black4="#11111b"

# ----------------------------=== Theme ===--------------------------

# ----- Hot reload ----

bind r source-file ~/.tmux.conf

# ----- Panes -----

# Mouse on
set -g mouse on

# Base remap
unbind-key C-b
set-option -g prefix C-x
bind-key C-x send-prefix

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

unbind %
unbind '"'

# Key bindings for creating panes
bind-key h split-window -h -c "#{pane_current_path}" # horizontal
bind-key v split-window -v -c "#{pane_current_path}" # verticle
bind c new-window -c "#{pane_current_path}"

bind-key -n 'C-k' send-keys -R \; send-keys C-l \; clear-history

# window navigation
bind C-w next-window
bind ^space last-window

# status
set -g status-interval 1
set -g escape-time 10
set -g focus-events on
set -g status "on"
set -g status-bg "${thm_bg}"
set -g status-justify "left"
set -g status-left-length "100"
set -g status-right-length "100"

set -Fg 'status-format[1]' '#{status-format[0]}'
set -g 'status-format[0]' ''
set -g status 2

# messages
set -g message-style fg="${thm_cyan}",bg="${thm_black}",align="centre"
set -g message-command-style fg="${thm_cyan}",bg="${thm_black}",align="centre"

# panes
set -g pane-border-style fg="${thm_black}"
set -g pane-active-border-style fg="${thm_blue}"

# windows
setw -g window-status-activity-style fg="${thm_fg}",bg="${thm_bg}",none
setw -g window-status-separator ""
setw -g window-status-style fg="${thm_fg}",bg="${thm_bg}",none

# statusline

# sessions
set -g status-left "#{?client_prefix,#[bg=$thm_red],#[bg=$thm_gray]}#[fg=$thm_bg]  #[fg=$thm_fg,bg=$thm_black] #S "

# process
set -g status-right "#[fg=$thm_bg,bg=$thm_gray] #(despell #W) #[fg=$thm_fg,bg=$thm_bg] #W "
# battery
set -ag status-right "#{battery_color_charge_bg} #{battery_icon} #[fg=$thm_fg,bg=$thm_bg] #{battery_percentage} "
# cpu
set -ag status-right "#{cpu_bg_color}#[bold] CPU #[default]#[fg=$thm_fg,bg=$thm_bg] #{cpu_percentage} "
# ram
set -ag status-right "#{ram_bg_color}#[bold] RAM #[default]#[fg=$thm_fg,bg=$thm_bg] #{ram_percentage} "

# current_dir
setw -g window-status-format " #[fg=$thm_bg,bg=$thm_blue] #I:#W #[fg=$thm_gray,bg=$thm_bg] #{b:pane_current_path} "
setw -g window-status-current-format " #[fg=$thm_bg,bg=$thm_orange,bold] #I #[fg=$thm_fg,bold,bg=$thm_bg,nobold] #{b:pane_current_path} "

# modes
setw -g clock-mode-colour "${thm_blue}"
setw -g mode-style "fg=${thm_pink} bg=${thm_black4} bold"

# -----------------------------------------------------------------------------
# terminal colors
set  -g default-terminal "screen-256color"
set -ag terminal-overrides ",alacritty:RGB,xterm-256color:RGB"

# Built-in plugins of p-z-l/magicTmux
# (recommended for better experience)
set -g @plugin 'tmux-plugins/tmux-battery'

set -g @batt_color_charge_primary_tier8 '#a6e3a1'
set -g @batt_color_charge_primary_tier7 '#b1d6a2'
set -g @batt_color_charge_primary_tier6 '#bccaa3'
set -g @batt_color_charge_primary_tier5 '#c7bda4'
set -g @batt_color_charge_primary_tier4 '#d2b1a5'
set -g @batt_color_charge_primary_tier3 '#dda4a6'
set -g @batt_color_charge_primary_tier2 '#e898a7'
set -g @batt_color_charge_primary_tier1 '#f38ba8'

set -g @batt_icon_charge_tier8 ''
set -g @batt_icon_charge_tier7 ''
set -g @batt_icon_charge_tier6 ''
set -g @batt_icon_charge_tier5 ''
set -g @batt_icon_charge_tier4 ''
set -g @batt_icon_charge_tier3 ''
set -g @batt_icon_charge_tier2 ''
set -g @batt_icon_charge_tier1 ''
set -g @batt_icon_status_attached ''
set -g @batt_icon_status_charged ''
set -g @batt_icon_status_charging 'ﮣ'
set -g @batt_icon_status_discharging 'ﮤ'
set -g @batt_icon_status_unknown ''

set -g @plugin 'tmux-plugins/tmux-cpu'

set -g @cpu_low_bg_color "#[fg=$thm_bg,bg=$thm_green,nobold,nounderscore,noitalics]" # background color when cpu is low
set -g @cpu_medium_bg_color "#[fg=$thm_bg,bg=$thm_orange,nobold,nounderscore,noitalics]" # background color when cpu is medium
set -g @cpu_high_bg_color "#[fg=$thm_bg,bg=$thm_red,nobold,nounderscore,noitalics]" # background color when cpu is high

set -g @ram_low_bg_color "#[fg=$thm_bg,bg=$thm_green,nobold,nounderscore,noitalics]" # background color when cpu is low
set -g @ram_medium_bg_color "#[fg=$thm_bg,bg=$thm_orange,nobold,nounderscore,noitalics]" # background color when cpu is medium
set -g @ram_high_bg_color "#[fg=$thm_bg,bg=$thm_red,nobold,nounderscore,noitalics]" # background color when cpu is high

set -g @plugin 'tmux-plugins/tmux-prefix-highlight'


# tmux-prefix_highlight configs
set -g @prefix_highlight_fg 'magenta' # default is 'colour231'
set -g @prefix_highlight_bg 'black' # default is 'colour04'

# Display online status on your status bar:
set -g @plugin 'tmux-plugins/tmux-online-status'

# Restoring windows when starting tmux:
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# A plugin that enhances tmux search:
set -g @plugin 'tmux-plugins/tmux-copycat'

# Tmux plugin for copying to system clipboard. Works on OSX, Linux and Cygwin:
set -g @plugin 'tmux-plugins/tmux-yank'

# Tmux plugin to monitor upload and download speed of one or all interfaces:
set -g @plugin 'tmux-plugins/tmux-net-speed'

# Tmux plugin to open URLs in fast way
set -g @plugin 'tmux-plugins/tmux-open'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
